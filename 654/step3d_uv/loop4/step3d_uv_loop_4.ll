; ModuleID = 'step3d_uv_loop_4.c'
source_filename = "step3d_uv_loop_4.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@AK = dso_local local_unnamed_addr global [128 x double] [double 0x3F4B17F60D5A52FF, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA, double 0x3F4B181A214020EA], align 16
@AK_2 = dso_local local_unnamed_addr global [128 x double] zeroinitializer, align 16
@BC = dso_local local_unnamed_addr global [128 x double] [double 0x4026613177827EB1, double 0x402661317805EBBF, double 0x40266131780433F1, double 0x40266131780433F1, double 0x4026613178050FD8, double 0x4026613178050FD8, double 0x4026613178050FD8, double 0x402661317805EBBF, double 0x402661317805EBBF, double 0x402661317805EBBF, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6, double 0x402661317806C7A6], align 16
@CF = dso_local local_unnamed_addr global [128 x double] [double 0x3FCF98F4AF9320C7, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70], align 16
@CF_1 = dso_local local_unnamed_addr global [128 x double] [double 0x3FCF98F4AF9320C7, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70, double 0x3FCF98EEFC5C0D70], align 16
@cff1 = dso_local local_unnamed_addr global double 0x3FD55555554C2BB5, align 8
@DC_1 = dso_local local_unnamed_addr global [128 x double] [double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06, double 3.293700e-06], align 16
@dt = dso_local local_unnamed_addr global double 5.000000e+02, align 8
@FC = dso_local local_unnamed_addr global [128 x double] [double 0x4007394D861FDE25, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12, double 0x4007394D45F47A12], align 16
@Hzk = dso_local local_unnamed_addr global [128 x double] [double 0x40318F241695DBAE, double 0x40318F2416956DBB, double 0x40318F241695DBAE, double 0x40318F241695DBAE, double 0x40318F24169649A2, double 0x40318F241696B795, double 0x40318F241696B795, double 0x40318F2416972589, double 0x40318F2416972589, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F2416980170, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C, double 0x40318F241697937C], align 16
@Hzk_1 = dso_local local_unnamed_addr global [128 x double] [double 0x402FB4946C0C8767, double 0x402FB4946C0BAB80, double 0x402FB4946C0BAB80, double 0x402FB4946C0C8767, double 0x402FB4946C0D634E, double 0x402FB4946C0D634E, double 0x402FB4946C0E3F35, double 0x402FB4946C0E3F35, double 0x402FB4946C0E3F35, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0FF703, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C, double 0x402FB4946C0F1B1C], align 16
@oHz = dso_local local_unnamed_addr global [128 x double] [double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1, double 0x3FAD2899C0F597E1], align 16
@oHz_1 = dso_local local_unnamed_addr global [128 x double] [double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B, double 0x3FB0260F7E0A378B], align 16
@u = dso_local local_unnamed_addr global [128 x double] [double 3.882780e-05, double 3.883540e-05, double 3.883430e-05, double 3.883460e-05, double 3.883530e-05, double 3.883550e-05, double 3.883590e-05, double 3.883620e-05, double 3.883660e-05, double 3.883720e-05, double 3.883770e-05, double 3.883800e-05, double 3.883810e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05, double 3.883820e-05], align 16
@u_1 = dso_local local_unnamed_addr global [128 x double] [double 0x3F761AD4D8E4FCFD, double 0x3F761AD2A565100B, double 0x3F761AD252EE707E, double 0x3F761AD26E6B5058, double 0x3F761AD297A6A01E, double 0x3F761AD2AC444802, double 0x3F761AD2C0E1EFE5, double 0x3F761AD2D57F97C9, double 0x3F761AD2F7DBAF99, double 0x3F761AD31A37C769, double 0x3F761AD33C93DF39, double 0x3F761AD35131871D, double 0x3F761AD35EEFF70A, double 0x3F761AD35EEFF70A, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00, double 0x3F761AD365CF2F00], align 16
@cff = dso_local local_unnamed_addr global double 0.000000e+00, align 8
@DC = dso_local local_unnamed_addr global [128 x double] zeroinitializer, align 16

; Function Attrs: nofree norecurse nosync nounwind uwtable
define dso_local void @step3d_uv_loop_4(double* nocapture %BC, double %cff1, double* nocapture readonly %Hzk, double* nocapture readonly %Hzk_1, double %dt, double* nocapture readonly %AK, double* nocapture readonly %oHz, double* nocapture readonly %oHz_1, double* nocapture readonly %FC, double* nocapture %CF, double* nocapture readonly %CF_1, double* nocapture readonly %u, double* nocapture readonly %DC_1, double* nocapture %cff_, double* nocapture readonly %u_1, double* nocapture %DC) local_unnamed_addr #0 !dbg !7 {
entry:
  br label %for.body, !dbg !9

for.cond.cleanup:                                 ; preds = %for.body
  store double %div, double* %cff_, align 8, !dbg !10, !tbaa !11
  ret void, !dbg !15

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %Hzk, i64 %indvars.iv, !dbg !16
  %0 = load double, double* %arrayidx, align 8, !dbg !16, !tbaa !11
  %arrayidx2 = getelementptr inbounds double, double* %Hzk_1, i64 %indvars.iv, !dbg !17
  %1 = load double, double* %arrayidx2, align 8, !dbg !17, !tbaa !11
  %add = fadd double %0, %1, !dbg !18
  %mul = fmul double %add, %cff1, !dbg !19
  %arrayidx4 = getelementptr inbounds double, double* %AK, i64 %indvars.iv, !dbg !20
  %2 = load double, double* %arrayidx4, align 8, !dbg !20, !tbaa !11
  %mul5 = fmul double %2, %dt, !dbg !21
  %arrayidx7 = getelementptr inbounds double, double* %oHz, i64 %indvars.iv, !dbg !22
  %3 = load double, double* %arrayidx7, align 8, !dbg !22, !tbaa !11
  %arrayidx9 = getelementptr inbounds double, double* %oHz_1, i64 %indvars.iv, !dbg !23
  %4 = load double, double* %arrayidx9, align 8, !dbg !23, !tbaa !11
  %add10 = fadd double %3, %4, !dbg !24
  %mul11 = fmul double %mul5, %add10, !dbg !25
  %add12 = fadd double %mul, %mul11, !dbg !26
  %arrayidx14 = getelementptr inbounds double, double* %BC, i64 %indvars.iv, !dbg !27
  store double %add12, double* %arrayidx14, align 8, !dbg !28, !tbaa !11
  %arrayidx18 = getelementptr inbounds double, double* %FC, i64 %indvars.iv, !dbg !29
  %5 = load double, double* %arrayidx18, align 8, !dbg !29, !tbaa !11
  %arrayidx20 = getelementptr inbounds double, double* %CF_1, i64 %indvars.iv, !dbg !30
  %6 = load double, double* %arrayidx20, align 8, !dbg !30, !tbaa !11
  %mul21 = fmul double %5, %6, !dbg !31
  %sub = fsub double %add12, %mul21, !dbg !32
  %div = fdiv double 1.000000e+00, %sub, !dbg !33
  %arrayidx23 = getelementptr inbounds double, double* %CF, i64 %indvars.iv, !dbg !34
  %7 = load double, double* %arrayidx23, align 8, !dbg !34, !tbaa !11
  %mul24 = fmul double %7, %div, !dbg !35
  store double %mul24, double* %arrayidx23, align 8, !dbg !36, !tbaa !11
  %arrayidx28 = getelementptr inbounds double, double* %u_1, i64 %indvars.iv, !dbg !37
  %8 = load double, double* %arrayidx28, align 8, !dbg !37, !tbaa !11
  %arrayidx30 = getelementptr inbounds double, double* %u, i64 %indvars.iv, !dbg !38
  %9 = load double, double* %arrayidx30, align 8, !dbg !38, !tbaa !11
  %sub31 = fsub double %8, %9, !dbg !39
  %10 = load double, double* %arrayidx18, align 8, !dbg !40, !tbaa !11
  %arrayidx35 = getelementptr inbounds double, double* %DC_1, i64 %indvars.iv, !dbg !41
  %11 = load double, double* %arrayidx35, align 8, !dbg !41, !tbaa !11
  %mul36 = fmul double %10, %11, !dbg !42
  %sub37 = fsub double %sub31, %mul36, !dbg !43
  %mul38 = fmul double %div, %sub37, !dbg !44
  %arrayidx40 = getelementptr inbounds double, double* %DC, i64 %indvars.iv, !dbg !45
  store double %mul38, double* %arrayidx40, align 8, !dbg !46, !tbaa !11
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !47
  %exitcond.not = icmp eq i64 %indvars.iv.next, 128, !dbg !48
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !9, !llvm.loop !49
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define dso_local void @input_data_call() local_unnamed_addr #0 !dbg !52 {
entry:
  %0 = load double, double* @dt, align 8, !dbg !53, !tbaa !11
  %1 = load double, double* @cff1, align 8, !dbg !54, !tbaa !11
  %broadcast.splatinsert = insertelement <2 x double> poison, double %1, i32 0, !dbg !55
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !55
  %broadcast.splatinsert3 = insertelement <2 x double> poison, double %0, i32 0, !dbg !55
  %broadcast.splat4 = shufflevector <2 x double> %broadcast.splatinsert3, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !55
  br label %vector.body, !dbg !55

vector.body:                                      ; preds = %vector.body, %entry
  %index = phi i64 [ 0, %entry ], [ %index.next, %vector.body ], !dbg !57
  %2 = getelementptr inbounds [128 x double], [128 x double]* @Hzk, i64 0, i64 %index, !dbg !57
  %3 = bitcast double* %2 to <2 x double>*, !dbg !58
  %wide.load = load <2 x double>, <2 x double>* %3, align 16, !dbg !58, !tbaa !11
  %4 = getelementptr inbounds [128 x double], [128 x double]* @Hzk_1, i64 0, i64 %index, !dbg !57
  %5 = bitcast double* %4 to <2 x double>*, !dbg !59
  %wide.load1 = load <2 x double>, <2 x double>* %5, align 16, !dbg !59, !tbaa !11
  %6 = fadd <2 x double> %wide.load, %wide.load1, !dbg !60
  %7 = fmul <2 x double> %broadcast.splat, %6, !dbg !61
  %8 = getelementptr inbounds [128 x double], [128 x double]* @AK, i64 0, i64 %index, !dbg !57
  %9 = bitcast double* %8 to <2 x double>*, !dbg !62
  %wide.load2 = load <2 x double>, <2 x double>* %9, align 16, !dbg !62, !tbaa !11
  %10 = fmul <2 x double> %broadcast.splat4, %wide.load2, !dbg !63
  %11 = getelementptr inbounds [128 x double], [128 x double]* @oHz, i64 0, i64 %index, !dbg !57
  %12 = bitcast double* %11 to <2 x double>*, !dbg !64
  %wide.load5 = load <2 x double>, <2 x double>* %12, align 16, !dbg !64, !tbaa !11
  %13 = getelementptr inbounds [128 x double], [128 x double]* @oHz_1, i64 0, i64 %index, !dbg !57
  %14 = bitcast double* %13 to <2 x double>*, !dbg !65
  %wide.load6 = load <2 x double>, <2 x double>* %14, align 16, !dbg !65, !tbaa !11
  %15 = fadd <2 x double> %wide.load5, %wide.load6, !dbg !66
  %16 = fmul <2 x double> %10, %15, !dbg !67
  %17 = fadd <2 x double> %7, %16, !dbg !68
  %18 = getelementptr inbounds [128 x double], [128 x double]* @BC, i64 0, i64 %index, !dbg !57
  %19 = bitcast double* %18 to <2 x double>*, !dbg !69
  store <2 x double> %17, <2 x double>* %19, align 16, !dbg !69, !tbaa !11
  %20 = getelementptr inbounds [128 x double], [128 x double]* @FC, i64 0, i64 %index, !dbg !57
  %21 = bitcast double* %20 to <2 x double>*, !dbg !70
  %wide.load7 = load <2 x double>, <2 x double>* %21, align 16, !dbg !70, !tbaa !11
  %22 = getelementptr inbounds [128 x double], [128 x double]* @CF_1, i64 0, i64 %index, !dbg !57
  %23 = bitcast double* %22 to <2 x double>*, !dbg !71
  %wide.load8 = load <2 x double>, <2 x double>* %23, align 16, !dbg !71, !tbaa !11
  %24 = fmul <2 x double> %wide.load7, %wide.load8, !dbg !72
  %25 = fsub <2 x double> %17, %24, !dbg !73
  %26 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %25, !dbg !74
  %27 = getelementptr inbounds [128 x double], [128 x double]* @CF, i64 0, i64 %index, !dbg !57
  %28 = bitcast double* %27 to <2 x double>*, !dbg !75
  %wide.load9 = load <2 x double>, <2 x double>* %28, align 16, !dbg !75, !tbaa !11
  %29 = fmul <2 x double> %wide.load9, %26, !dbg !76
  %30 = bitcast double* %27 to <2 x double>*, !dbg !77
  store <2 x double> %29, <2 x double>* %30, align 16, !dbg !77, !tbaa !11
  %31 = getelementptr inbounds [128 x double], [128 x double]* @u_1, i64 0, i64 %index, !dbg !57
  %32 = bitcast double* %31 to <2 x double>*, !dbg !78
  %wide.load10 = load <2 x double>, <2 x double>* %32, align 16, !dbg !78, !tbaa !11
  %33 = getelementptr inbounds [128 x double], [128 x double]* @u, i64 0, i64 %index, !dbg !57
  %34 = bitcast double* %33 to <2 x double>*, !dbg !79
  %wide.load11 = load <2 x double>, <2 x double>* %34, align 16, !dbg !79, !tbaa !11
  %35 = fsub <2 x double> %wide.load10, %wide.load11, !dbg !80
  %36 = getelementptr inbounds [128 x double], [128 x double]* @DC_1, i64 0, i64 %index, !dbg !57
  %37 = bitcast double* %36 to <2 x double>*, !dbg !81
  %wide.load12 = load <2 x double>, <2 x double>* %37, align 16, !dbg !81, !tbaa !11
  %38 = fmul <2 x double> %wide.load7, %wide.load12, !dbg !82
  %39 = fsub <2 x double> %35, %38, !dbg !83
  %40 = fmul <2 x double> %26, %39, !dbg !84
  %41 = getelementptr inbounds [128 x double], [128 x double]* @DC, i64 0, i64 %index, !dbg !57
  %42 = bitcast double* %41 to <2 x double>*, !dbg !85
  store <2 x double> %40, <2 x double>* %42, align 16, !dbg !85, !tbaa !11
  %index.next = add nuw i64 %index, 2, !dbg !57
  %43 = icmp eq i64 %index.next, 128, !dbg !57
  br i1 %43, label %middle.block, label %vector.body, !dbg !57, !llvm.loop !86

middle.block:                                     ; preds = %vector.body
  %44 = extractelement <2 x double> %26, i32 1, !dbg !55
  store double %44, double* @cff, align 8, !dbg !89, !tbaa !11
  ret void, !dbg !90
}

; Function Attrs: nofree norecurse nosync nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #0 !dbg !91 {
entry:
  %0 = load double, double* @dt, align 8, !dbg !92, !tbaa !11
  %1 = load double, double* @cff1, align 8, !dbg !94, !tbaa !11
  %broadcast.splatinsert = insertelement <2 x double> poison, double %1, i32 0, !dbg !95
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !95
  %broadcast.splatinsert3 = insertelement <2 x double> poison, double %0, i32 0, !dbg !95
  %broadcast.splat4 = shufflevector <2 x double> %broadcast.splatinsert3, <2 x double> poison, <2 x i32> zeroinitializer, !dbg !95
  br label %vector.body, !dbg !95

vector.body:                                      ; preds = %vector.body, %entry
  %index = phi i64 [ 0, %entry ], [ %index.next, %vector.body ], !dbg !97
  %2 = getelementptr inbounds [128 x double], [128 x double]* @Hzk, i64 0, i64 %index, !dbg !97
  %3 = bitcast double* %2 to <2 x double>*, !dbg !98
  %wide.load = load <2 x double>, <2 x double>* %3, align 16, !dbg !98, !tbaa !11
  %4 = getelementptr inbounds [128 x double], [128 x double]* @Hzk_1, i64 0, i64 %index, !dbg !97
  %5 = bitcast double* %4 to <2 x double>*, !dbg !99
  %wide.load1 = load <2 x double>, <2 x double>* %5, align 16, !dbg !99, !tbaa !11
  %6 = fadd <2 x double> %wide.load, %wide.load1, !dbg !100
  %7 = fmul <2 x double> %broadcast.splat, %6, !dbg !101
  %8 = getelementptr inbounds [128 x double], [128 x double]* @AK, i64 0, i64 %index, !dbg !97
  %9 = bitcast double* %8 to <2 x double>*, !dbg !102
  %wide.load2 = load <2 x double>, <2 x double>* %9, align 16, !dbg !102, !tbaa !11
  %10 = fmul <2 x double> %broadcast.splat4, %wide.load2, !dbg !103
  %11 = getelementptr inbounds [128 x double], [128 x double]* @oHz, i64 0, i64 %index, !dbg !97
  %12 = bitcast double* %11 to <2 x double>*, !dbg !104
  %wide.load5 = load <2 x double>, <2 x double>* %12, align 16, !dbg !104, !tbaa !11
  %13 = getelementptr inbounds [128 x double], [128 x double]* @oHz_1, i64 0, i64 %index, !dbg !97
  %14 = bitcast double* %13 to <2 x double>*, !dbg !105
  %wide.load6 = load <2 x double>, <2 x double>* %14, align 16, !dbg !105, !tbaa !11
  %15 = fadd <2 x double> %wide.load5, %wide.load6, !dbg !106
  %16 = fmul <2 x double> %10, %15, !dbg !107
  %17 = fadd <2 x double> %7, %16, !dbg !108
  %18 = getelementptr inbounds [128 x double], [128 x double]* @BC, i64 0, i64 %index, !dbg !97
  %19 = bitcast double* %18 to <2 x double>*, !dbg !109
  store <2 x double> %17, <2 x double>* %19, align 16, !dbg !109, !tbaa !11
  %20 = getelementptr inbounds [128 x double], [128 x double]* @FC, i64 0, i64 %index, !dbg !97
  %21 = bitcast double* %20 to <2 x double>*, !dbg !110
  %wide.load7 = load <2 x double>, <2 x double>* %21, align 16, !dbg !110, !tbaa !11
  %22 = getelementptr inbounds [128 x double], [128 x double]* @CF_1, i64 0, i64 %index, !dbg !97
  %23 = bitcast double* %22 to <2 x double>*, !dbg !111
  %wide.load8 = load <2 x double>, <2 x double>* %23, align 16, !dbg !111, !tbaa !11
  %24 = fmul <2 x double> %wide.load7, %wide.load8, !dbg !112
  %25 = fsub <2 x double> %17, %24, !dbg !113
  %26 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %25, !dbg !114
  %27 = getelementptr inbounds [128 x double], [128 x double]* @CF, i64 0, i64 %index, !dbg !97
  %28 = bitcast double* %27 to <2 x double>*, !dbg !115
  %wide.load9 = load <2 x double>, <2 x double>* %28, align 16, !dbg !115, !tbaa !11
  %29 = fmul <2 x double> %wide.load9, %26, !dbg !116
  %30 = bitcast double* %27 to <2 x double>*, !dbg !117
  store <2 x double> %29, <2 x double>* %30, align 16, !dbg !117, !tbaa !11
  %31 = getelementptr inbounds [128 x double], [128 x double]* @u_1, i64 0, i64 %index, !dbg !97
  %32 = bitcast double* %31 to <2 x double>*, !dbg !118
  %wide.load10 = load <2 x double>, <2 x double>* %32, align 16, !dbg !118, !tbaa !11
  %33 = getelementptr inbounds [128 x double], [128 x double]* @u, i64 0, i64 %index, !dbg !97
  %34 = bitcast double* %33 to <2 x double>*, !dbg !119
  %wide.load11 = load <2 x double>, <2 x double>* %34, align 16, !dbg !119, !tbaa !11
  %35 = fsub <2 x double> %wide.load10, %wide.load11, !dbg !120
  %36 = getelementptr inbounds [128 x double], [128 x double]* @DC_1, i64 0, i64 %index, !dbg !97
  %37 = bitcast double* %36 to <2 x double>*, !dbg !121
  %wide.load12 = load <2 x double>, <2 x double>* %37, align 16, !dbg !121, !tbaa !11
  %38 = fmul <2 x double> %wide.load7, %wide.load12, !dbg !122
  %39 = fsub <2 x double> %35, %38, !dbg !123
  %40 = fmul <2 x double> %26, %39, !dbg !124
  %41 = getelementptr inbounds [128 x double], [128 x double]* @DC, i64 0, i64 %index, !dbg !97
  %42 = bitcast double* %41 to <2 x double>*, !dbg !125
  store <2 x double> %40, <2 x double>* %42, align 16, !dbg !125, !tbaa !11
  %index.next = add nuw i64 %index, 2, !dbg !97
  %43 = icmp eq i64 %index.next, 128, !dbg !97
  br i1 %43, label %middle.block, label %vector.body, !dbg !97, !llvm.loop !126

middle.block:                                     ; preds = %vector.body
  %44 = extractelement <2 x double> %26, i32 1, !dbg !95
  store double %44, double* @cff, align 8, !dbg !128, !tbaa !11
  ret i32 0, !dbg !129
}

attributes #0 = { nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 13.0.0", isOptimized: true, runtimeVersion: 0, emissionKind: NoDebug, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "step3d_uv_loop_4.c", directory: "/home2/zhangyuyang/654/step3d_uv/loop4")
!2 = !{}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 7, !"uwtable", i32 1}
!6 = !{!"clang version 13.0.0"}
!7 = distinct !DISubprogram(name: "step3d_uv_loop_4", scope: !1, file: !1, line: 17, type: !8, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!8 = !DISubroutineType(types: !2)
!9 = !DILocation(line: 31, column: 5, scope: !7)
!10 = !DILocation(line: 38, column: 11, scope: !7)
!11 = !{!12, !12, i64 0}
!12 = !{!"double", !13, i64 0}
!13 = !{!"omnipotent char", !14, i64 0}
!14 = !{!"Simple C/C++ TBAA"}
!15 = !DILocation(line: 39, column: 1, scope: !7)
!16 = !DILocation(line: 33, column: 25, scope: !7)
!17 = !DILocation(line: 33, column: 34, scope: !7)
!18 = !DILocation(line: 33, column: 32, scope: !7)
!19 = !DILocation(line: 33, column: 22, scope: !7)
!20 = !DILocation(line: 33, column: 51, scope: !7)
!21 = !DILocation(line: 33, column: 49, scope: !7)
!22 = !DILocation(line: 33, column: 60, scope: !7)
!23 = !DILocation(line: 33, column: 69, scope: !7)
!24 = !DILocation(line: 33, column: 67, scope: !7)
!25 = !DILocation(line: 33, column: 57, scope: !7)
!26 = !DILocation(line: 33, column: 44, scope: !7)
!27 = !DILocation(line: 33, column: 9, scope: !7)
!28 = !DILocation(line: 33, column: 15, scope: !7)
!29 = !DILocation(line: 34, column: 30, scope: !7)
!30 = !DILocation(line: 34, column: 38, scope: !7)
!31 = !DILocation(line: 34, column: 36, scope: !7)
!32 = !DILocation(line: 34, column: 28, scope: !7)
!33 = !DILocation(line: 34, column: 19, scope: !7)
!34 = !DILocation(line: 35, column: 23, scope: !7)
!35 = !DILocation(line: 35, column: 21, scope: !7)
!36 = !DILocation(line: 35, column: 15, scope: !7)
!37 = !DILocation(line: 36, column: 24, scope: !7)
!38 = !DILocation(line: 36, column: 33, scope: !7)
!39 = !DILocation(line: 36, column: 31, scope: !7)
!40 = !DILocation(line: 36, column: 40, scope: !7)
!41 = !DILocation(line: 36, column: 48, scope: !7)
!42 = !DILocation(line: 36, column: 46, scope: !7)
!43 = !DILocation(line: 36, column: 38, scope: !7)
!44 = !DILocation(line: 36, column: 21, scope: !7)
!45 = !DILocation(line: 36, column: 9, scope: !7)
!46 = !DILocation(line: 36, column: 15, scope: !7)
!47 = !DILocation(line: 31, column: 30, scope: !7)
!48 = !DILocation(line: 31, column: 22, scope: !7)
!49 = distinct !{!49, !9, !50, !51}
!50 = !DILocation(line: 37, column: 5, scope: !7)
!51 = !{!"llvm.loop.mustprogress"}
!52 = distinct !DISubprogram(name: "input_data_call", scope: !1, file: !1, line: 43, type: !8, scopeLine: 44, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!53 = !DILocation(line: 45, column: 44, scope: !52)
!54 = !DILocation(line: 45, column: 26, scope: !52)
!55 = !DILocation(line: 31, column: 5, scope: !7, inlinedAt: !56)
!56 = distinct !DILocation(line: 45, column: 5, scope: !52)
!57 = !DILocation(line: 31, column: 30, scope: !7, inlinedAt: !56)
!58 = !DILocation(line: 33, column: 25, scope: !7, inlinedAt: !56)
!59 = !DILocation(line: 33, column: 34, scope: !7, inlinedAt: !56)
!60 = !DILocation(line: 33, column: 32, scope: !7, inlinedAt: !56)
!61 = !DILocation(line: 33, column: 22, scope: !7, inlinedAt: !56)
!62 = !DILocation(line: 33, column: 51, scope: !7, inlinedAt: !56)
!63 = !DILocation(line: 33, column: 49, scope: !7, inlinedAt: !56)
!64 = !DILocation(line: 33, column: 60, scope: !7, inlinedAt: !56)
!65 = !DILocation(line: 33, column: 69, scope: !7, inlinedAt: !56)
!66 = !DILocation(line: 33, column: 67, scope: !7, inlinedAt: !56)
!67 = !DILocation(line: 33, column: 57, scope: !7, inlinedAt: !56)
!68 = !DILocation(line: 33, column: 44, scope: !7, inlinedAt: !56)
!69 = !DILocation(line: 33, column: 15, scope: !7, inlinedAt: !56)
!70 = !DILocation(line: 34, column: 30, scope: !7, inlinedAt: !56)
!71 = !DILocation(line: 34, column: 38, scope: !7, inlinedAt: !56)
!72 = !DILocation(line: 34, column: 36, scope: !7, inlinedAt: !56)
!73 = !DILocation(line: 34, column: 28, scope: !7, inlinedAt: !56)
!74 = !DILocation(line: 34, column: 19, scope: !7, inlinedAt: !56)
!75 = !DILocation(line: 35, column: 23, scope: !7, inlinedAt: !56)
!76 = !DILocation(line: 35, column: 21, scope: !7, inlinedAt: !56)
!77 = !DILocation(line: 35, column: 15, scope: !7, inlinedAt: !56)
!78 = !DILocation(line: 36, column: 24, scope: !7, inlinedAt: !56)
!79 = !DILocation(line: 36, column: 33, scope: !7, inlinedAt: !56)
!80 = !DILocation(line: 36, column: 31, scope: !7, inlinedAt: !56)
!81 = !DILocation(line: 36, column: 48, scope: !7, inlinedAt: !56)
!82 = !DILocation(line: 36, column: 46, scope: !7, inlinedAt: !56)
!83 = !DILocation(line: 36, column: 38, scope: !7, inlinedAt: !56)
!84 = !DILocation(line: 36, column: 21, scope: !7, inlinedAt: !56)
!85 = !DILocation(line: 36, column: 15, scope: !7, inlinedAt: !56)
!86 = distinct !{!86, !55, !87, !51, !88}
!87 = !DILocation(line: 37, column: 5, scope: !7, inlinedAt: !56)
!88 = !{!"llvm.loop.isvectorized", i32 1}
!89 = !DILocation(line: 38, column: 11, scope: !7, inlinedAt: !56)
!90 = !DILocation(line: 46, column: 1, scope: !52)
!91 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 47, type: !8, scopeLine: 48, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2)
!92 = !DILocation(line: 45, column: 44, scope: !52, inlinedAt: !93)
!93 = distinct !DILocation(line: 49, column: 5, scope: !91)
!94 = !DILocation(line: 45, column: 26, scope: !52, inlinedAt: !93)
!95 = !DILocation(line: 31, column: 5, scope: !7, inlinedAt: !96)
!96 = distinct !DILocation(line: 45, column: 5, scope: !52, inlinedAt: !93)
!97 = !DILocation(line: 31, column: 30, scope: !7, inlinedAt: !96)
!98 = !DILocation(line: 33, column: 25, scope: !7, inlinedAt: !96)
!99 = !DILocation(line: 33, column: 34, scope: !7, inlinedAt: !96)
!100 = !DILocation(line: 33, column: 32, scope: !7, inlinedAt: !96)
!101 = !DILocation(line: 33, column: 22, scope: !7, inlinedAt: !96)
!102 = !DILocation(line: 33, column: 51, scope: !7, inlinedAt: !96)
!103 = !DILocation(line: 33, column: 49, scope: !7, inlinedAt: !96)
!104 = !DILocation(line: 33, column: 60, scope: !7, inlinedAt: !96)
!105 = !DILocation(line: 33, column: 69, scope: !7, inlinedAt: !96)
!106 = !DILocation(line: 33, column: 67, scope: !7, inlinedAt: !96)
!107 = !DILocation(line: 33, column: 57, scope: !7, inlinedAt: !96)
!108 = !DILocation(line: 33, column: 44, scope: !7, inlinedAt: !96)
!109 = !DILocation(line: 33, column: 15, scope: !7, inlinedAt: !96)
!110 = !DILocation(line: 34, column: 30, scope: !7, inlinedAt: !96)
!111 = !DILocation(line: 34, column: 38, scope: !7, inlinedAt: !96)
!112 = !DILocation(line: 34, column: 36, scope: !7, inlinedAt: !96)
!113 = !DILocation(line: 34, column: 28, scope: !7, inlinedAt: !96)
!114 = !DILocation(line: 34, column: 19, scope: !7, inlinedAt: !96)
!115 = !DILocation(line: 35, column: 23, scope: !7, inlinedAt: !96)
!116 = !DILocation(line: 35, column: 21, scope: !7, inlinedAt: !96)
!117 = !DILocation(line: 35, column: 15, scope: !7, inlinedAt: !96)
!118 = !DILocation(line: 36, column: 24, scope: !7, inlinedAt: !96)
!119 = !DILocation(line: 36, column: 33, scope: !7, inlinedAt: !96)
!120 = !DILocation(line: 36, column: 31, scope: !7, inlinedAt: !96)
!121 = !DILocation(line: 36, column: 48, scope: !7, inlinedAt: !96)
!122 = !DILocation(line: 36, column: 46, scope: !7, inlinedAt: !96)
!123 = !DILocation(line: 36, column: 38, scope: !7, inlinedAt: !96)
!124 = !DILocation(line: 36, column: 21, scope: !7, inlinedAt: !96)
!125 = !DILocation(line: 36, column: 15, scope: !7, inlinedAt: !96)
!126 = distinct !{!126, !95, !127, !51, !88}
!127 = !DILocation(line: 37, column: 5, scope: !7, inlinedAt: !96)
!128 = !DILocation(line: 38, column: 11, scope: !7, inlinedAt: !96)
!129 = !DILocation(line: 50, column: 1, scope: !91)
